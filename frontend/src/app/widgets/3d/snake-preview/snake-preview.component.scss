:host {
    width: 100%;
    height: 100%;
    position: relative;
    overflow: hidden;
    background-color: black;
}

.floor {
    box-shadow: 0 0 100px 200px black inset;
    $cell-outline: white;
    $cell-fill: #000126;
    $cell-border: 5%;
    $cell-border-reversed: 100% - $cell-border;
    font-size: min(5vw,5vh);
    position: absolute;
    left: 50%;
    bottom: 0;
    background-image: linear-gradient(
            to bottom,
            $cell-outline $cell-border,
            transparent $cell-border,
            transparent $cell-border-reversed,
            $cell-outline $cell-border-reversed
        ),
        linear-gradient(
            to right,
            $cell-outline $cell-border,
            $cell-fill $cell-border,
            $cell-fill $cell-border-reversed,
            $cell-outline $cell-border-reversed
        );
    background-size: 1em 1em;
    background-position: 0 0, 0 0.5em, 0.5em -0.5em, -0.5em 0px;
    width: calc(var(--grid-width) * 1em);
    height: calc(var(--grid-height) * 1em);
    transform: translateX(-50%) perspective(600px)  rotateX(30deg);
    transform-origin: bottom;
    transform-style: preserve-3d;
}

.cube {
    position: absolute;
    top: calc(var(--y) * 1em);
    left: calc(var(--x) * 1em);
    $width: 1;
    $height: 1;
    $depth: 0.6;
    width: 1em;
    height: 1em;
    > * {
        background-color: var(--color);
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        box-shadow: 0 0 0.5em black inset;
    }
    .bottom {
        transform: scale($width, $height);
    }
    .front {
        transform: translate3d(0, $height/2 *1em, $depth/2 *1em) scale3d($width, 1, $depth) rotateX(-90deg);
    }

    .back {
        transform: translate3d(0, -$height/2 *1em, $depth/2 *1em) scale3d($width, 1, $depth) rotateX(-90deg);
    }

    .left {
        transform: translate3d(-$width/2 * 1em, 0, $depth/2 *1em) scale3d(1, $height, $depth) rotateY(-90deg);
    }

    .right {
        transform: translate3d($width/2 * 1em, 0, $depth/2 *1em) scale3d(1, $height, $depth) rotateY(-90deg);
    }

    .top {
        transform: translateZ($depth *1em) scale($width, $height);
    }
}